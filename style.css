/* style.css */
:root {
    /* Pastel Orange Theme */
    --primary-bg: #fffaf0; /* Floral White - Light background */
    --secondary-bg: #ffe4c4; /* Bisque - Slightly darker background/panels */
    --accent-color: #ff7f50; /* Coral - Main accent color */
    --accent-hover: #ff6347; /* Tomato - Accent hover */
    --text-color: #4a4a4a; /* Dark Gray - Primary text */
    --border-color: #ffdab9; /* Peach Puff - Borders */
    --header-bg: #ff8c69; /* Salmon variant for header */
    --header-text: #ffffff; /* White text for header */
    --code-bg: #2d2d2d; /* Dark background for code (matches Prism Okaidia) */
    --button-bg: var(--accent-color);
    --button-text: #ffffff;
    --button-hover-bg: var(--accent-hover);
    --shadow-color: rgba(0, 0, 0, 0.1);
    --status-text-color: #555;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    background-color: var(--primary-bg);
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
}

header {
    background-color: var(--header-bg);
    color: var(--header-text);
    padding: 10px 20px;
    box-shadow: 0 2px 4px var(--shadow-color);
    z-index: 10;
    flex-shrink: 0;
}

header h1 {
    margin: 0;
    font-size: 1.5em;
    display: flex;
    align-items: center;
    gap: 10px;
}

.container {
    display: flex;
    flex-grow: 1;
    height: calc(100vh - 58px); /* Adjust if header height changes */
    overflow: hidden;
}

#blocklyArea {
    flex: 3;
    position: relative;
    border-right: 2px solid var(--border-color);
    overflow: hidden;
    height: 100%;
}

#blocklyDiv {
    height: 100%;
    width: 100%;
}

#codeArea {
    flex: 2;
    display: flex;
    flex-direction: column;
    background-color: var(--secondary-bg);
    padding: 15px;
    overflow: hidden;
    height: 100%;
    box-sizing: border-box;
}

#codeArea h2 {
    margin-top: 0;
    margin-bottom: 10px;
    font-size: 1.2em;
    color: var(--accent-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 5px;
    display: flex;
    align-items: center;
    gap: 8px;
    flex-shrink: 0;
}

.controls {
    margin-bottom: 15px;
    display: flex;
    gap: 10px; /* Adjust gap between control groups */
    align-items: center;
    flex-wrap: wrap;
    flex-shrink: 0;
    padding-bottom: 10px; /* Add some padding below controls */
    border-bottom: 1px solid var(--border-color); /* Separator */
}

.control-item {
    display: flex;
    align-items: center;
    gap: 5px; /* Space within a control item */
    margin-right: 10px; /* Space between control items */
}

.controls label {
    font-weight: bold;
    color: var(--text-color);
    font-size: 0.9em;
    display: flex;
    align-items: center;
    gap: 3px;
}

.controls select,
.controls button {
    padding: 6px 10px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    background-color: var(--primary-bg);
    color: var(--text-color);
    font-size: 0.9em;
    cursor: pointer;
    height: 32px; /* Consistent height */
    box-sizing: border-box;
}

.controls select {
    min-width: 130px; /* Base width for selects */
}
.controls select:disabled {
    background-color: #eee;
    cursor: not-allowed;
}


.controls button {
    background-color: var(--button-bg);
    color: var(--button-text);
    border: none; /* Buttons don't need border */
    transition: background-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center; /* Center icon/text */
    gap: 5px;
    min-width: 40px; /* Min width for icon buttons */
}
/* Specific width for buttons with text */
#uploadButton, #serialButton {
    min-width: 80px;
}


.controls button:hover {
    background-color: var(--button-hover-bg);
}

/* Style the refresh button specifically */
#refreshPortsButton {
    padding: 6px 8px; /* Slightly smaller padding */
    min-width: 35px;
}


#codeArea pre {
    flex-grow: 1;
    background-color: var(--code-bg);
    border: 1px solid var(--border-color);
    border-radius: 5px;
    padding: 10px;
    overflow: auto;
    margin: 0;
    font-family: 'Courier New', Courier, monospace;
    font-size: 0.9em;
    white-space: pre-wrap;
    word-wrap: break-word;
    min-height: 100px;
}

#codeArea pre > code {
    display: block;
    color: #f8f8f2; /* Okaidia theme text color */
}

.status-messages {
    margin-top: 10px;
    padding: 8px;
    font-size: 0.85em;
    color: var(--status-text-color);
    background-color: rgba(255, 255, 255, 0.5); /* Slightly transparent white */
    border-radius: 4px;
    min-height: 1.5em; /* Ensure space even when empty */
    border: 1px dashed var(--border-color);
}

/* --- Blockly Specific Styling --- */
.blocklyToolboxDiv {
    background-color: var(--secondary-bg);
    border-right: 1px solid var(--border-color);
}
.blocklyTreeLabel {
    color: var(--text-color) !important;
    font-weight: bold;
}
.blocklyTreeRow.blocklyTreeSelected {
    background-color: var(--border-color) !important;
}

/* --- Scrollbars --- */
::-webkit-scrollbar { width: 8px; height: 8px; }
::-webkit-scrollbar-track { background: var(--primary-bg); }
::-webkit-scrollbar-thumb { background: var(--border-color); border-radius: 4px; }
::-webkit-scrollbar-thumb:hover { background: var(--accent-color); }

/* --- Responsive Adjustments --- */
@media (max-width: 768px) {
    .container { flex-direction: column; height: auto; overflow: auto; }
    #blocklyArea { height: 50vh; border-right: none; border-bottom: 2px solid var(--border-color); flex-basis: auto; min-height: 300px; }
    #codeArea { height: auto; flex-basis: auto; min-height: 250px; }
    #codeArea pre { height: 30vh; min-height: 150px; }
    header h1 { font-size: 1.2em; }
    .controls { gap: 8px; }
    .controls select, .controls button { font-size: 0.85em; padding: 5px 8px; height: 30px;}
    .controls select { min-width: 110px; }
    #uploadButton, #serialButton { min-width: 70px; }
    #refreshPortsButton { min-width: 30px; padding: 5px 6px;}
}

